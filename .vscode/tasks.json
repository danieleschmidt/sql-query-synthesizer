{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install Dependencies",
      "type": "shell",
      "command": "pip",
      "args": ["install", "-e", ".[dev]"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "pytest",
      "args": ["tests/", "--cov=sql_synthesizer", "--cov-report=html", "-v"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Linting",
      "type": "shell",
      "command": "pre-commit",
      "args": ["run", "--all-files"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Format Code",
      "type": "shell",
      "command": "black",
      "args": [".", "--line-length=88"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Type Check",
      "type": "shell",
      "command": "mypy",
      "args": ["sql_synthesizer/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Security Check",
      "type": "shell",
      "command": "bandit",
      "args": ["-r", "sql_synthesizer/", "-f", "json", "-o", "bandit-report.json"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Docker Build",
      "type": "docker-build",
      "dockerBuild": {
        "dockerfile": "${workspaceFolder}/Dockerfile",
        "context": "${workspaceFolder}",
        "tag": "sql-synthesizer:latest"
      }
    },
    {
      "label": "Docker Run Debug",
      "type": "docker-run",
      "dockerRun": {
        "image": "sql-synthesizer:latest",
        "ports": [
          {
            "containerPort": 5000,
            "hostPort": 5000
          }
        ],
        "env": {
          "FLASK_ENV": "development",
          "FLASK_DEBUG": "1"
        }
      },
      "dependsOn": ["Docker Build"]
    }
  ]
}